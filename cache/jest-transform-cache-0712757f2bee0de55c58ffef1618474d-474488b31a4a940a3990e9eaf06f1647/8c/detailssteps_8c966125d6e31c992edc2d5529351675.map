{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_reactRouterDom","_Details","_axios","obj","__esModule","default","feature","loadFeature","defineFeature","test","given","when","then","createElement","MemoryRouter","initialEntries","Route","path","element","jest","spyOn","axios","mockResolvedValueOnce","data","word","phonetics","text","audio","meanings","partOfSpeech","definitions","definition","example","synonyms"],"sources":["details.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Routes,\r\n  Navigate,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport {\r\n  act,\r\n  cleanup,\r\n  fireEvent,\r\n  render,\r\n  waitFor,\r\n} from \"@testing-library/react\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { store } from \"../../Redux/store\";\r\nimport routes from \"../../utils/Routes\";\r\nimport Home from \"../../Dictionary/Home\";\r\nimport Details from \"../../Dictionary/Details\";\r\nimport axios from \"axios\";\r\nconst feature = loadFeature(\"src/Components/Features/details.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  test(\"User views word details with phonetics and meanings\", ({\r\n    given,\r\n    when,\r\n    then,\r\n  }) => {\r\n    given(\"The user is on the Details page\", () => {\r\n      <MemoryRouter initialEntries={[\"/details/example\"]}>\r\n        <Route path=\"/details/:id\" element={<Details />} />\r\n      </MemoryRouter>;\r\n    }),\r\n      when(\"The user views the details for a word\", async () => {\r\n        jest.spyOn(axios, \"get\").mockResolvedValueOnce({\r\n          data: [\r\n            {\r\n              word: \"example\",\r\n              phonetics: [\r\n                {\r\n                  text: \"/ɪɡˈzæmpəl/\",\r\n                  audio: \"example-audio.mp3\",\r\n                },\r\n              ],\r\n              meanings: [\r\n                {\r\n                  partOfSpeech: \"noun\",\r\n                  definitions: [\r\n                    {\r\n                      definition: \"a representative form or pattern\",\r\n                      example: \"I followed your example\",\r\n                      synonyms: [\"model\", \"pattern\", \"prototype\"],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        });\r\n        then(\"The word details should be displayed\", () => {});\r\n      });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAEA,IAAAE,eAAA,GAAAF,OAAA;AAcAA,OAAA;AAIA,IAAAG,QAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,MAAA,GAAAL,sBAAA,CAAAC,OAAA;AAA0B,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC1B,MAAMG,OAAO,GAAG,IAAAC,yBAAW,EAAC,yCAAyC,CAAC;AAEtE,IAAAC,2BAAa,EAACF,OAAO,EAAGG,IAAI,IAAK;EAC/BA,IAAI,CAAC,qDAAqD,EAAE,CAAC;IAC3DC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC,KAAK;IACJF,KAAK,CAAC,iCAAiC,EAAE,MAAM;MAC7C,aAAAd,MAAA,CAAAS,OAAA,CAAAQ,aAAA,CAACb,eAAA,CAAAc,YAAY;QAACC,cAAc,EAAE,CAAC,kBAAkB;MAAE,gBACjDnB,MAAA,CAAAS,OAAA,CAAAQ,aAAA,CAACb,eAAA,CAAAgB,KAAK;QAACC,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEtB,MAAA,CAAAS,OAAA,CAAAQ,aAAA,CAACZ,QAAA,CAAAI,OAAO;MAAI,EAAG,CACtC;IACjB,CAAC,CAAC,EACAM,IAAI,CAAC,uCAAuC,EAAE,YAAY;MACxDQ,IAAI,CAACC,KAAK,CAACC,cAAK,EAAE,KAAK,CAAC,CAACC,qBAAqB,CAAC;QAC7CC,IAAI,EAAE,CACJ;UACEC,IAAI,EAAE,SAAS;UACfC,SAAS,EAAE,CACT;YACEC,IAAI,EAAE,aAAa;YACnBC,KAAK,EAAE;UACT,CAAC,CACF;UACDC,QAAQ,EAAE,CACR;YACEC,YAAY,EAAE,MAAM;YACpBC,WAAW,EAAE,CACX;cACEC,UAAU,EAAE,kCAAkC;cAC9CC,OAAO,EAAE,yBAAyB;cAClCC,QAAQ,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW;YAC5C,CAAC;UAEL,CAAC;QAEL,CAAC;MAEL,CAAC,CAAC;MACFrB,IAAI,CAAC,sCAAsC,EAAE,MAAM,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC,CAAC"}