{"version":3,"names":["_react","require","_Context","_useReduxContext","createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","useContext","useStore","store","exports"],"sources":["useStore.js"],"sourcesContent":["import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASG,eAAeA,CAACC,OAAO,GAAGC,0BAAiB,EAAE;EAC3D,MAAMC,eAAe;EAAG;EACxBF,OAAO,KAAKC,0BAAiB,GAAGE,gCAAsB,GAAG,MAAM,IAAAC,iBAAU,EAACJ,OAAO,CAAC;EAClF,OAAO,SAASK,QAAQA,CAAA,EAAG;IACzB,MAAM;MACJC;IACF,CAAC,GAAGJ,eAAe,EAAE,CAAC,CAAC;;IAEvB,OAAOI,KAAK;EACd,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMD,QAAQ,GAAG,aAAaN,eAAe,EAAE;AAACQ,OAAA,CAAAF,QAAA,GAAAA,QAAA"}