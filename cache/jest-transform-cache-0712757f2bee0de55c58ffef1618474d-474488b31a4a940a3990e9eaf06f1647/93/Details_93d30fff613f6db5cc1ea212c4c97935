fd64e13cb04045ad4a0dec9e1ff215a8
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));
var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));
var
/* istanbul ignore next */
_reactRouterDom = require("react-router-dom");
var
/* istanbul ignore next */
_App = require("./../../App");
/* istanbul ignore next */ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_2kg6thqn3x() {
  var path = "D:\\Projects\\React\\dictionary-app\\src\\Components\\Dictionary\\Details.tsx";
  var hash = "d015c3369cd034577695af7fc374331a29f0c625";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects\\React\\dictionary-app\\src\\Components\\Dictionary\\Details.tsx",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "2": {
        start: {
          line: 9,
          column: 40
        },
        end: {
          line: 9,
          column: 59
        }
      },
      "3": {
        start: {
          line: 11,
          column: 33
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "4": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 25,
          column: 14
        }
      },
      "5": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "7": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      },
      "11": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 64,
          column: 4
        }
      },
      "12": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 39,
          column: 18
        }
      },
      "13": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "14": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 57,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 17
          }
        },
        loc: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 38
          }
        },
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 39,
            column: 18
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 41,
            column: 37
          }
        },
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 59,
            column: 18
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 57,
            column: 22
          }
        },
        line: 45
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 7
          },
          end: {
            line: 62,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 7
          },
          end: {
            line: 28,
            column: 18
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 61,
            column: 14
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 38,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 29
          }
        }, {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 37,
            column: 24
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 51,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 37
          }
        }, {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 50,
            column: 24
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 56,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 38
          }
        }, {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 55,
            column: 24
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d015c3369cd034577695af7fc374331a29f0c625"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2kg6thqn3x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kg6thqn3x();
cov_2kg6thqn3x().s[0]++;
const Details = () => {
  /* istanbul ignore next */
  cov_2kg6thqn3x().f[0]++;
  const {
    state
  } =
  /* istanbul ignore next */
  (cov_2kg6thqn3x().s[1]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _reactRouterDom.
  /* istanbul ignore next */
  useLocation)());
  const [wordDetails, setWordDetails] =
  /* istanbul ignore next */
  (cov_2kg6thqn3x().s[2]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(null));
  const {
    theme,
    themeToggle
  } =
  /* istanbul ignore next */
  (cov_2kg6thqn3x().s[3]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useContext)(
  /* istanbul ignore next */
  _App.
  /* istanbul ignore next */
  ThemeContext));
  /* istanbul ignore next */
  cov_2kg6thqn3x().s[4]++;
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useEffect)(() => {
    /* istanbul ignore next */
    cov_2kg6thqn3x().f[1]++;
    cov_2kg6thqn3x().s[5]++;
    const getWordDetails = async () => {
      /* istanbul ignore next */
      cov_2kg6thqn3x().f[2]++;
      cov_2kg6thqn3x().s[6]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2kg6thqn3x().s[7]++, await (
          /* istanbul ignore next */
          _axios.
          /* istanbul ignore next */
          default.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${state}`)
        ));
        /* istanbul ignore next */
        cov_2kg6thqn3x().s[8]++;
        setWordDetails(result.data[0]);
      } catch (error) {
        /* istanbul ignore next */
        cov_2kg6thqn3x().s[9]++;
        alert("No details found.");
      }
    };
    /* istanbul ignore next */
    cov_2kg6thqn3x().s[10]++;
    getWordDetails();
  }, [state]);
  /* istanbul ignore next */
  cov_2kg6thqn3x().s[11]++;
  return /*#__PURE__*/(
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "detailsContainer"
    },
    /* istanbul ignore next */
    (cov_2kg6thqn3x().b[0][0]++, wordDetails) &&
    /* istanbul ignore next */
    (cov_2kg6thqn3x().b[0][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "details"
    }, /*#__PURE__*/
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "h1",
    /* istanbul ignore next */
    {
      className: "wordHeading"
    }, wordDetails.word), wordDetails.phonetics.map((phonetic, index) => {
      /* istanbul ignore next */
      cov_2kg6thqn3x().f[3]++;
      cov_2kg6thqn3x().s[12]++;
      return /*#__PURE__*/(
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "div",
        /* istanbul ignore next */
        {
          key: index,
          className: "phonetics"
        }, /*#__PURE__*/
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "p",
        /* istanbul ignore next */
        null, phonetic.text),
        /* istanbul ignore next */
        (cov_2kg6thqn3x().b[1][0]++, phonetic.audio) &&
        /* istanbul ignore next */
        (cov_2kg6thqn3x().b[1][1]++, /*#__PURE__*/
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "audio",
        /* istanbul ignore next */
        {
          controls:
          /* istanbul ignore next */
          true
        }, /*#__PURE__*/
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "source",
        /* istanbul ignore next */
        {
          src: phonetic.audio,
          type: "audio/mpeg"
        }))))
      );
    }), wordDetails.meanings.map((meaning, index) => {
      /* istanbul ignore next */
      cov_2kg6thqn3x().f[4]++;
      cov_2kg6thqn3x().s[13]++;
      return /*#__PURE__*/(
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "div",
        /* istanbul ignore next */
        {
          key: index,
          className: "meanings"
        }, /*#__PURE__*/
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        "h3",
        /* istanbul ignore next */
        {
          className: "partOfSpeech"
        }, meaning.partOfSpeech), meaning.definitions.map((definition, index) => {
          /* istanbul ignore next */
          cov_2kg6thqn3x().f[5]++;
          cov_2kg6thqn3x().s[14]++;
          return /*#__PURE__*/(
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              key: index,
              className: "defineWExample"
            }, /*#__PURE__*/
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              className: "definitionParagraph"
            }, definition.definition),
            /* istanbul ignore next */
            (cov_2kg6thqn3x().b[2][0]++, definition.example) &&
            /* istanbul ignore next */
            (cov_2kg6thqn3x().b[2][1]++, /*#__PURE__*/
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              className: "example"
            }, /*#__PURE__*/
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "em",
            /* istanbul ignore next */
            null, "Example:"), " ", definition.example)),
            /* istanbul ignore next */
            (cov_2kg6thqn3x().b[3][0]++, definition.synonyms) &&
            /* istanbul ignore next */
            (cov_2kg6thqn3x().b[3][1]++, /*#__PURE__*/
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              className: "synonyms"
            }, /*#__PURE__*/
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "em",
            /* istanbul ignore next */
            null, "Synonyms:"), " ", definition.synonyms.join(", "))))
          );
        }))
      );
    }))))
  );
};
/* istanbul ignore next */
var _default = Details;
/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,