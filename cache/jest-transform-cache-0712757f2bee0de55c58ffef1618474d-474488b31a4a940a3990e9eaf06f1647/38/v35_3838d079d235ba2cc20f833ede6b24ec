938ff31387fb4f707b98de93b39ba734
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.URL = exports.DNS = void 0;
exports.default = _default;
var
/* istanbul ignore next */
_stringify = _interopRequireDefault(require("./stringify.js"));
var
/* istanbul ignore next */
_parse = _interopRequireDefault(require("./parse.js"));
/* istanbul ignore next */ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];
  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }
  return bytes;
}
var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
/* istanbul ignore next */
exports.DNS = DNS;
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* istanbul ignore next */
exports.URL = URL;
function
/* istanbul ignore next */
_default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }
    if (typeof namespace === 'string') {
      namespace =
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _parse.
      /* istanbul ignore next */
      default)(namespace);
    }
    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`

    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;
    if (buf) {
      offset = offset || 0;
      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }
      return buf;
    }
    return (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _stringify.
      /* istanbul ignore next */
      default)(bytes)
    );
  } // Function#name is not settable on some platforms (#270)

  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support

  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3RyaW5naWZ5IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcGFyc2UiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInN0cmluZ1RvQnl0ZXMiLCJzdHIiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImJ5dGVzIiwiaSIsImxlbmd0aCIsInB1c2giLCJjaGFyQ29kZUF0IiwiRE5TIiwiZXhwb3J0cyIsIlVSTCIsIl9kZWZhdWx0IiwibmFtZSIsInZlcnNpb24iLCJoYXNoZnVuYyIsImdlbmVyYXRlVVVJRCIsInZhbHVlIiwibmFtZXNwYWNlIiwiYnVmIiwib2Zmc2V0IiwicGFyc2UiLCJUeXBlRXJyb3IiLCJVaW50OEFycmF5Iiwic2V0Iiwic3RyaW5naWZ5IiwiZXJyIl0sInNvdXJjZXMiOlsidjM1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHJpbmdpZnkgZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuaW1wb3J0IHBhcnNlIGZyb20gJy4vcGFyc2UuanMnO1xuXG5mdW5jdGlvbiBzdHJpbmdUb0J5dGVzKHN0cikge1xuICBzdHIgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoc3RyKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgdmFyIGJ5dGVzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICBieXRlcy5wdXNoKHN0ci5jaGFyQ29kZUF0KGkpKTtcbiAgfVxuXG4gIHJldHVybiBieXRlcztcbn1cblxuZXhwb3J0IHZhciBETlMgPSAnNmJhN2I4MTAtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydCB2YXIgVVJMID0gJzZiYTdiODExLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbiwgaGFzaGZ1bmMpIHtcbiAgZnVuY3Rpb24gZ2VuZXJhdGVVVUlEKHZhbHVlLCBuYW1lc3BhY2UsIGJ1Ziwgb2Zmc2V0KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhbHVlID0gc3RyaW5nVG9CeXRlcyh2YWx1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lc3BhY2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICBuYW1lc3BhY2UgPSBwYXJzZShuYW1lc3BhY2UpO1xuICAgIH1cblxuICAgIGlmIChuYW1lc3BhY2UubGVuZ3RoICE9PSAxNikge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdOYW1lc3BhY2UgbXVzdCBiZSBhcnJheS1saWtlICgxNiBpdGVyYWJsZSBpbnRlZ2VyIHZhbHVlcywgMC0yNTUpJyk7XG4gICAgfSAvLyBDb21wdXRlIGhhc2ggb2YgbmFtZXNwYWNlIGFuZCB2YWx1ZSwgUGVyIDQuM1xuICAgIC8vIEZ1dHVyZTogVXNlIHNwcmVhZCBzeW50YXggd2hlbiBzdXBwb3J0ZWQgb24gYWxsIHBsYXRmb3JtcywgZS5nLiBgYnl0ZXMgPVxuICAgIC8vIGhhc2hmdW5jKFsuLi5uYW1lc3BhY2UsIC4uLiB2YWx1ZV0pYFxuXG5cbiAgICB2YXIgYnl0ZXMgPSBuZXcgVWludDhBcnJheSgxNiArIHZhbHVlLmxlbmd0aCk7XG4gICAgYnl0ZXMuc2V0KG5hbWVzcGFjZSk7XG4gICAgYnl0ZXMuc2V0KHZhbHVlLCBuYW1lc3BhY2UubGVuZ3RoKTtcbiAgICBieXRlcyA9IGhhc2hmdW5jKGJ5dGVzKTtcbiAgICBieXRlc1s2XSA9IGJ5dGVzWzZdICYgMHgwZiB8IHZlcnNpb247XG4gICAgYnl0ZXNbOF0gPSBieXRlc1s4XSAmIDB4M2YgfCAweDgwO1xuXG4gICAgaWYgKGJ1Zikge1xuICAgICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgICBidWZbb2Zmc2V0ICsgaV0gPSBieXRlc1tpXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyaW5naWZ5KGJ5dGVzKTtcbiAgfSAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgfSBjYXRjaCAoZXJyKSB7fSAvLyBGb3IgQ29tbW9uSlMgZGVmYXVsdCBleHBvcnQgc3VwcG9ydFxuXG5cbiAgZ2VuZXJhdGVVVUlELkROUyA9IEROUztcbiAgZ2VuZXJhdGVVVUlELlVSTCA9IFVSTDtcbiAgcmV0dXJuIGdlbmVyYXRlVVVJRDtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBQSxVQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQTtBQUFBO0FBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUErQixvQ0FBQUQsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFFL0IsU0FBU0csYUFBYUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQzFCQSxHQUFHLEdBQUdDLFFBQVEsQ0FBQ0Msa0JBQWtCLENBQUNGLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7RUFFekMsSUFBSUcsS0FBSyxHQUFHLEVBQUU7RUFFZCxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0osR0FBRyxDQUFDSyxNQUFNLEVBQUUsRUFBRUQsQ0FBQyxFQUFFO0lBQ25DRCxLQUFLLENBQUNHLElBQUksQ0FBQ04sR0FBRyxDQUFDTyxVQUFVLENBQUNILENBQUMsQ0FBQyxDQUFDO0VBQy9CO0VBRUEsT0FBT0QsS0FBSztBQUNkO0FBRU8sSUFBSUssR0FBRyxHQUFHLHNDQUFzQztBQUFDO0FBQUFDLE9BQUEsQ0FBQUQsR0FBQSxHQUFBQSxHQUFBO0FBQ2pELElBQUlFLEdBQUcsR0FBRyxzQ0FBc0M7QUFBQztBQUFBRCxPQUFBLENBQUFDLEdBQUEsR0FBQUEsR0FBQTtBQUN6QztBQUFBO0FBQUFDLFNBQVVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUU7RUFDaEQsU0FBU0MsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsTUFBTSxFQUFFO0lBQ25ELElBQUksT0FBT0gsS0FBSyxLQUFLLFFBQVEsRUFBRTtNQUM3QkEsS0FBSyxHQUFHakIsYUFBYSxDQUFDaUIsS0FBSyxDQUFDO0lBQzlCO0lBRUEsSUFBSSxPQUFPQyxTQUFTLEtBQUssUUFBUSxFQUFFO01BQ2pDQSxTQUFTO01BQUc7TUFBQTtNQUFBRztNQUFBQTtNQUFBQTtNQUFBQSxPQUFLLEVBQUNILFNBQVMsQ0FBQztJQUM5QjtJQUVBLElBQUlBLFNBQVMsQ0FBQ1osTUFBTSxLQUFLLEVBQUUsRUFBRTtNQUMzQixNQUFNZ0IsU0FBUyxDQUFDLGtFQUFrRSxDQUFDO0lBQ3JGLENBQUMsQ0FBQztJQUNGO0lBQ0E7O0lBR0EsSUFBSWxCLEtBQUssR0FBRyxJQUFJbUIsVUFBVSxDQUFDLEVBQUUsR0FBR04sS0FBSyxDQUFDWCxNQUFNLENBQUM7SUFDN0NGLEtBQUssQ0FBQ29CLEdBQUcsQ0FBQ04sU0FBUyxDQUFDO0lBQ3BCZCxLQUFLLENBQUNvQixHQUFHLENBQUNQLEtBQUssRUFBRUMsU0FBUyxDQUFDWixNQUFNLENBQUM7SUFDbENGLEtBQUssR0FBR1csUUFBUSxDQUFDWCxLQUFLLENBQUM7SUFDdkJBLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBR0EsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBR1UsT0FBTztJQUNwQ1YsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLElBQUk7SUFFakMsSUFBSWUsR0FBRyxFQUFFO01BQ1BDLE1BQU0sR0FBR0EsTUFBTSxJQUFJLENBQUM7TUFFcEIsS0FBSyxJQUFJZixDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUVBLENBQUMsRUFBRTtRQUMzQmMsR0FBRyxDQUFDQyxNQUFNLEdBQUdmLENBQUMsQ0FBQyxHQUFHRCxLQUFLLENBQUNDLENBQUMsQ0FBQztNQUM1QjtNQUVBLE9BQU9jLEdBQUc7SUFDWjtJQUVBLE9BQU87TUFBQTtNQUFBO01BQUFNO01BQUFBO01BQUFBO01BQUFBLE9BQVMsRUFBQ3JCLEtBQUs7SUFBQztFQUN6QixDQUFDLENBQUM7O0VBR0YsSUFBSTtJQUNGWSxZQUFZLENBQUNILElBQUksR0FBR0EsSUFBSSxDQUFDLENBQUM7RUFDNUIsQ0FBQyxDQUFDLE9BQU9hLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQzs7RUFHakJWLFlBQVksQ0FBQ1AsR0FBRyxHQUFHQSxHQUFHO0VBQ3RCTyxZQUFZLENBQUNMLEdBQUcsR0FBR0EsR0FBRztFQUN0QixPQUFPSyxZQUFZO0FBQ3JCIn0=