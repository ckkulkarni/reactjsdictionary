{"version":3,"names":["_react","require","canUseDOM","window","document","createElement","exports","useIsomorphicLayoutEffect","useLayoutEffect","useEffect"],"sources":["useIsomorphicLayoutEffect.js"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,SAAS,GAAG,CAAC,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,IAAI,OAAOD,MAAM,CAACC,QAAQ,CAACC,aAAa,KAAK,WAAW,CAAC;AAACC,OAAA,CAAAJ,SAAA,GAAAA,SAAA;AACtJ,MAAMK,yBAAyB,GAAGL,SAAS,GAAGM,sBAAe,GAAGC,gBAAS;AAACH,OAAA,CAAAC,yBAAA,GAAAA,yBAAA"}