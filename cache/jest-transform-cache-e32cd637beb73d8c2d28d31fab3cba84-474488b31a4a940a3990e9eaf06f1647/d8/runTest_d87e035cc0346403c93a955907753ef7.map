{"version":3,"names":["Object","defineProperty","exports","value","default","runTest","_chalk","data","_interopRequireDefault","require","fs","_interopRequireWildcard","_sourceMapSupport","_console","_transform","docblock","_jestLeakDetector","_jestMessageUtil","_jestResolve","_jestUtil","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","freezeConsole","testConsole","config","_log","fakeConsolePush","_type","message","error","ErrorWithStack","red","bold","formattedError","formatExecError","noStackTrace","undefined","process","stderr","write","exitCode","runTestInternal","path","globalConfig","projectConfig","resolver","context","sendMessageToJest","testSource","readFileSync","docblockPragmas","parse","extract","customEnvironment","testEnvironment","Array","isArray","Error","join","resolveTestEnvironment","requireResolveFunction","resolve","cacheFS","Map","transformer","createScriptTransformer","TestEnvironment","requireAndTranspileModule","testFramework","env","JEST_JASMINE","testRunner","Runtime","interopRequireDefault","runtime","consoleOut","useStderr","stdout","consoleFormatter","type","getConsoleOutput","BufferedConsole","silent","NullConsole","verbose","CustomConsole","extraTestEnvironmentOptions","docblockEnvironmentOptions","JSON","environment","testEnvironmentOptions","console","testPath","getVmContext","exit","leakDetector","detectLeaks","setGlobal","global","changedFiles","collectCoverage","collectCoverageFrom","coverageProvider","sourcesRelatedToTestsInChangedFiles","isTornDown","tearDownEnv","teardown","start","Date","now","setupFiles","esm","unstable_shouldLoadAsEsm","unstable_importModule","setupFile","requireModule","sourcemapOptions","handleUncaughtExceptions","retrieveSourceMap","source","sourceMapSource","getSourceMaps","map","url","requireInternalModule","install","realExit","args","collectV8Coverage","stackTraceLimit","setup","result","err","stack","stopCollectingV8Coverage","testCount","numPassingTests","numFailingTests","numPendingTests","numTodoTests","end","testRuntime","perfStats","slow","slowTestThreshold","testFilePath","getBuffer","skipped","displayName","coverage","getAllCoverageInfoCopy","coverageKeys","keys","length","v8Coverage","getAllV8CoverageInfoCopy","logHeapUsage","globalThis","gc","memoryUsage","heapUsed","Promise","setImmediate","resetRetrieveHandlers","setTimeout","leaks","isLeaking"],"sources":["runTest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = runTest;\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n  fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _sourceMapSupport() {\n  const data = _interopRequireDefault(require('source-map-support'));\n  _sourceMapSupport = function () {\n    return data;\n  };\n  return data;\n}\nfunction _console() {\n  const data = require('@jest/console');\n  _console = function () {\n    return data;\n  };\n  return data;\n}\nfunction _transform() {\n  const data = require('@jest/transform');\n  _transform = function () {\n    return data;\n  };\n  return data;\n}\nfunction docblock() {\n  const data = _interopRequireWildcard(require('jest-docblock'));\n  docblock = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestLeakDetector() {\n  const data = _interopRequireDefault(require('jest-leak-detector'));\n  _jestLeakDetector = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n  _jestMessageUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestResolve() {\n  const data = require('jest-resolve');\n  _jestResolve = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction freezeConsole(testConsole, config) {\n  // @ts-expect-error: `_log` is `private` - we should figure out some proper API here\n  testConsole._log = function fakeConsolePush(_type, message) {\n    const error = new (_jestUtil().ErrorWithStack)(\n      `${_chalk().default.red(\n        `${_chalk().default.bold(\n          'Cannot log after tests are done.'\n        )} Did you forget to wait for something async in your test?`\n      )}\\nAttempted to log \"${message}\".`,\n      fakeConsolePush\n    );\n    const formattedError = (0, _jestMessageUtil().formatExecError)(\n      error,\n      config,\n      {\n        noStackTrace: false\n      },\n      undefined,\n      true\n    );\n    process.stderr.write(`\\n${formattedError}\\n`);\n    process.exitCode = 1;\n  };\n}\n\n// Keeping the core of \"runTest\" as a separate function (as \"runTestInternal\")\n// is key to be able to detect memory leaks. Since all variables are local to\n// the function, when \"runTestInternal\" finishes its execution, they can all be\n// freed, UNLESS something else is leaking them (and that's why we can detect\n// the leak!).\n//\n// If we had all the code in a single function, we should manually nullify all\n// references to verify if there is a leak, which is not maintainable and error\n// prone. That's why \"runTestInternal\" CANNOT be inlined inside \"runTest\".\nasync function runTestInternal(\n  path,\n  globalConfig,\n  projectConfig,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const testSource = fs().readFileSync(path, 'utf8');\n  const docblockPragmas = docblock().parse(docblock().extract(testSource));\n  const customEnvironment = docblockPragmas['jest-environment'];\n  let testEnvironment = projectConfig.testEnvironment;\n  if (customEnvironment) {\n    if (Array.isArray(customEnvironment)) {\n      throw new Error(\n        `You can only define a single test environment through docblocks, got \"${customEnvironment.join(\n          ', '\n        )}\"`\n      );\n    }\n    testEnvironment = (0, _jestResolve().resolveTestEnvironment)({\n      ...projectConfig,\n      requireResolveFunction: require.resolve,\n      testEnvironment: customEnvironment\n    });\n  }\n  const cacheFS = new Map([[path, testSource]]);\n  const transformer = await (0, _transform().createScriptTransformer)(\n    projectConfig,\n    cacheFS\n  );\n  const TestEnvironment = await transformer.requireAndTranspileModule(\n    testEnvironment\n  );\n  const testFramework = await transformer.requireAndTranspileModule(\n    process.env.JEST_JASMINE === '1'\n      ? require.resolve('jest-jasmine2')\n      : projectConfig.testRunner\n  );\n  const Runtime = (0, _jestUtil().interopRequireDefault)(\n    projectConfig.runtime\n      ? require(projectConfig.runtime)\n      : require('jest-runtime')\n  ).default;\n  const consoleOut = globalConfig.useStderr ? process.stderr : process.stdout;\n  const consoleFormatter = (type, message) =>\n    (0, _console().getConsoleOutput)(\n      // 4 = the console call is buried 4 stack frames deep\n      _console().BufferedConsole.write([], type, message, 4),\n      projectConfig,\n      globalConfig\n    );\n  let testConsole;\n  if (globalConfig.silent) {\n    testConsole = new (_console().NullConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else if (globalConfig.verbose) {\n    testConsole = new (_console().CustomConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else {\n    testConsole = new (_console().BufferedConsole)();\n  }\n  let extraTestEnvironmentOptions;\n  const docblockEnvironmentOptions =\n    docblockPragmas['jest-environment-options'];\n  if (typeof docblockEnvironmentOptions === 'string') {\n    extraTestEnvironmentOptions = JSON.parse(docblockEnvironmentOptions);\n  }\n  const environment = new TestEnvironment(\n    {\n      globalConfig,\n      projectConfig: extraTestEnvironmentOptions\n        ? {\n            ...projectConfig,\n            testEnvironmentOptions: {\n              ...projectConfig.testEnvironmentOptions,\n              ...extraTestEnvironmentOptions\n            }\n          }\n        : projectConfig\n    },\n    {\n      console: testConsole,\n      docblockPragmas,\n      testPath: path\n    }\n  );\n  if (typeof environment.getVmContext !== 'function') {\n    console.error(\n      `Test environment found at \"${testEnvironment}\" does not export a \"getVmContext\" method, which is mandatory from Jest 27. This method is a replacement for \"runScript\".`\n    );\n    process.exit(1);\n  }\n  const leakDetector = projectConfig.detectLeaks\n    ? new (_jestLeakDetector().default)(environment)\n    : null;\n  (0, _jestUtil().setGlobal)(environment.global, 'console', testConsole);\n  const runtime = new Runtime(\n    projectConfig,\n    environment,\n    resolver,\n    transformer,\n    cacheFS,\n    {\n      changedFiles: context.changedFiles,\n      collectCoverage: globalConfig.collectCoverage,\n      collectCoverageFrom: globalConfig.collectCoverageFrom,\n      coverageProvider: globalConfig.coverageProvider,\n      sourcesRelatedToTestsInChangedFiles:\n        context.sourcesRelatedToTestsInChangedFiles\n    },\n    path,\n    globalConfig\n  );\n  let isTornDown = false;\n  const tearDownEnv = async () => {\n    if (!isTornDown) {\n      runtime.teardown();\n      await environment.teardown();\n      isTornDown = true;\n    }\n  };\n  const start = Date.now();\n  for (const path of projectConfig.setupFiles) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      const setupFile = runtime.requireModule(path);\n      if (typeof setupFile === 'function') {\n        await setupFile();\n      }\n    }\n  }\n  const sourcemapOptions = {\n    environment: 'node',\n    handleUncaughtExceptions: false,\n    retrieveSourceMap: source => {\n      const sourceMapSource = runtime.getSourceMaps()?.get(source);\n      if (sourceMapSource) {\n        try {\n          return {\n            map: JSON.parse(fs().readFileSync(sourceMapSource, 'utf8')),\n            url: source\n          };\n        } catch {}\n      }\n      return null;\n    }\n  };\n\n  // For tests\n  runtime\n    .requireInternalModule(require.resolve('source-map-support'))\n    .install(sourcemapOptions);\n\n  // For runtime errors\n  _sourceMapSupport().default.install(sourcemapOptions);\n  if (\n    environment.global &&\n    environment.global.process &&\n    environment.global.process.exit\n  ) {\n    const realExit = environment.global.process.exit;\n    environment.global.process.exit = function exit(...args) {\n      const error = new (_jestUtil().ErrorWithStack)(\n        `process.exit called with \"${args.join(', ')}\"`,\n        exit\n      );\n      const formattedError = (0, _jestMessageUtil().formatExecError)(\n        error,\n        projectConfig,\n        {\n          noStackTrace: false\n        },\n        undefined,\n        true\n      );\n      process.stderr.write(formattedError);\n      return realExit(...args);\n    };\n  }\n\n  // if we don't have `getVmContext` on the env skip coverage\n  const collectV8Coverage =\n    globalConfig.collectCoverage &&\n    globalConfig.coverageProvider === 'v8' &&\n    typeof environment.getVmContext === 'function';\n\n  // Node's error-message stack size is limited at 10, but it's pretty useful\n  // to see more than that when a test fails.\n  Error.stackTraceLimit = 100;\n  try {\n    await environment.setup();\n    let result;\n    try {\n      if (collectV8Coverage) {\n        await runtime.collectV8Coverage();\n      }\n      result = await testFramework(\n        globalConfig,\n        projectConfig,\n        environment,\n        runtime,\n        path,\n        sendMessageToJest\n      );\n    } catch (err) {\n      // Access stack before uninstalling sourcemaps\n      err.stack;\n      throw err;\n    } finally {\n      if (collectV8Coverage) {\n        await runtime.stopCollectingV8Coverage();\n      }\n    }\n    freezeConsole(testConsole, projectConfig);\n    const testCount =\n      result.numPassingTests +\n      result.numFailingTests +\n      result.numPendingTests +\n      result.numTodoTests;\n    const end = Date.now();\n    const testRuntime = end - start;\n    result.perfStats = {\n      end,\n      runtime: testRuntime,\n      slow: testRuntime / 1000 > projectConfig.slowTestThreshold,\n      start\n    };\n    result.testFilePath = path;\n    result.console = testConsole.getBuffer();\n    result.skipped = testCount === result.numPendingTests;\n    result.displayName = projectConfig.displayName;\n    const coverage = runtime.getAllCoverageInfoCopy();\n    if (coverage) {\n      const coverageKeys = Object.keys(coverage);\n      if (coverageKeys.length) {\n        result.coverage = coverage;\n      }\n    }\n    if (collectV8Coverage) {\n      const v8Coverage = runtime.getAllV8CoverageInfoCopy();\n      if (v8Coverage && v8Coverage.length > 0) {\n        result.v8Coverage = v8Coverage;\n      }\n    }\n    if (globalConfig.logHeapUsage) {\n      // @ts-expect-error - doesn't exist on globalThis\n      globalThis.gc?.();\n      result.memoryUsage = process.memoryUsage().heapUsed;\n    }\n    await tearDownEnv();\n\n    // Delay the resolution to allow log messages to be output.\n    return await new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector,\n          result\n        })\n      );\n    });\n  } finally {\n    await tearDownEnv();\n    _sourceMapSupport().default.resetRetrieveHandlers();\n  }\n}\nasync function runTest(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const {leakDetector, result} = await runTestInternal(\n    path,\n    globalConfig,\n    config,\n    resolver,\n    context,\n    sendMessageToJest\n  );\n  if (leakDetector) {\n    // We wanna allow a tiny but time to pass to allow last-minute cleanup\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    // Resolve leak detector, outside the \"runTestInternal\" closure.\n    result.leaks = await leakDetector.isLeaking();\n  } else {\n    result.leaks = false;\n  }\n  return result;\n}\n"],"mappings":"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"}